"""add position table

Revision ID: 177cf473c133
Revises: 1203ce11768d
Create Date: 2024-05-04 14:43:43.125403

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "177cf473c133"
down_revision: Union[str, None] = "1203ce11768d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(sa.text("CREATE EXTENSION IF NOT EXISTS pg_trgm;"))
    op.create_table(
        "department",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("path", sa.String(), nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["company_id"], ["company.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_index(
        "ix_department_path",
        "department",
        ["path"],
        unique=False,
        postgresql_using="gist",
        postgresql_ops={"path": "gist_trgm_ops"},
    )
    op.create_table(
        "position",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("department_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["department_id"], ["department.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "user_position",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("position_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["position_id"], ["position.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user_id", "position_id"),
    )
    op.create_unique_constraint("unique_company_id", "company", ["id"])
    op.create_unique_constraint("unique_user_id", "user", ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("unique_user_id", "user", type_="unique")
    op.drop_constraint("unique_company_id", "company", type_="unique")
    op.drop_table("user_position")
    op.drop_table("position")
    op.drop_index(
        "ix_department_path",
        table_name="department",
        postgresql_using="gist",
        postgresql_ops={"path": "gist_trgm_ops"},
    )
    op.drop_table("department")
    op.execute(sa.text("DROP EXTENSION IF EXISTS pg_trgm;"))
    # ### end Alembic commands ###
